[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tau"
version = "0.0.1"
authors = [
  { name="Lee Kelvin", email="author@example.com" },
]
description = "Tiny Astro Utils"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/leeskelvin/tau"
Issues = "https://github.com/leeskelvin/tau/issues"

[tool.black]
line-length = 110
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 110

[tool.pytest.ini_options]

[tool.lint.pydocstyle]
convention = "numpy"
# Our coding style does not require docstrings for magic methods (D105)
# Our docstyle documents __init__ at the class level (D107)
# We allow methods to inherit docstrings and this is not compatible with D102.
# Docstring at the very first line is not required
# D200, D205 and D400 all complain if the first sentence of the docstring does
# not fit on one line.
add-ignore = ["D107", "D105", "D102", "D100", "D200", "D205", "D400"]

[tool.ruff]
exclude = [
    "__init__.py",
]
lint.ignore = [
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "N816",
    "N999",
    "D107",
    "D105",
    "D102",
    "D104",
    "D100",
    "D200",
    "D205",
    "D400",
]
line-length = 110
lint.select = [
    "E",  # lint.pycodestyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "W",  # lint.pycodestyle
    "D",  # lint.pydocstyle
    "UP",  # pyupgrade
    "C4",  # comprehensions
]
target-version = "py310"
lint.extend-select = [
    "RUF100", # Warn about unused noqa
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 79

[tool.ruff.lint.pydocstyle]
convention = "numpy"
